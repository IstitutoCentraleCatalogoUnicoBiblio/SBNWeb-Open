/*******************************************************************************
 * Copyright (C) 2019 ICCU - Istituto Centrale per il Catalogo Unico
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 * 
 * You should have received a copy of the GNU Affero General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 ******************************************************************************/
package it.iccu.sbn.ejb.vo.servizi.erogazione;

import it.iccu.sbn.ejb.utils.ValidazioneDati;
import it.iccu.sbn.ejb.vo.BaseVO;

import java.text.ParseException;
import java.util.Locale;

/**
 * TblModalitaErogazione generated by MyEclipse Persistence Tools
 */

public class ModalitaErogazioneVO extends BaseVO {

	private static final long serialVersionUID = -6223446449836398590L;

	private Locale locale       = Locale.getDefault();
	private String numberFormat = "#,###,##0.00#";

	private int    id;
	private String codPolo;
	private String codBib;
	private String codErog;
	private String desModErog;
	private String tarBase = "0";
	private String costoUnitario = "0";

	private String flSvolg = "L";


	/** default constructor */
	public ModalitaErogazioneVO() {
	}

	// Property accessors

	public int getId() {
		return id;
	}

	public void setId(int id) {
		this.id = id;
	}

	public String getTarBase() {
		return this.tarBase;
	}

	public double getTarBaseDouble() throws ParseException {
		return getTarBase(numberFormat, locale);
	}

	public double getTarBase(String format, Locale locale) throws ParseException {
		return ValidazioneDati.getDoubleFromString(tarBase, format, locale);
	}

	public void setTarBase(String tarBase) {
		this.tarBase = tarBase;
	}

	public void setTarBaseDouble(double tarBase) {
		setTarBase(tarBase, numberFormat, locale);
	}

	public void setTarBase(double tarBase, String format, Locale locale) {
		this.tarBase = ValidazioneDati.getStringFromDouble(tarBase, format, locale);
	}

	public String getCostoUnitario() {
		return costoUnitario;
	}

	public double getCostoUnitarioDouble() throws ParseException {
		return getCostoUnitario(numberFormat, locale);
	}

	public double getCostoUnitario(String format, Locale locale) throws ParseException {
		return ValidazioneDati.getDoubleFromString(costoUnitario, format, locale);
	}

	public void setCostoUnitario(String costoUnitario) {
		this.costoUnitario = costoUnitario;
	}

	public void setCostoUnitarioDouble(double costoUnitario) {
		setCostoUnitario(costoUnitario, numberFormat, locale);
	}

	public void setCostoUnitario(double costoUnitario, String format, Locale locale) {
		this.costoUnitario = ValidazioneDati.getStringFromDouble(costoUnitario, format, locale);
	}

	public String getUteIns() {
		return this.uteIns;
	}

	public void setUteIns(String uteIns) {
		this.uteIns = uteIns;
	}

	public String getUteVar() {
		return this.uteVar;
	}

	public void setUteVar(String uteVar) {
		this.uteVar = uteVar;
	}

	public String getCodBib() {
		return codBib;
	}

	public void setCodBib(String codBib) {
		this.codBib = codBib;
	}

	public String getCodErog() {
		return codErog;
	}

	public void setCodErog(String codErog) {
		int position = codErog.indexOf("_");
		if (position == -1)
			this.codErog = trimAndSet(codErog);
		else {
			this.codErog = trimAndSet(codErog.substring(0, position));
			this.desModErog = trimAndSet(codErog.substring(position + 1));
		}
	}

	public String getDesModErog() {
		return desModErog;
	}

	public void setDesModErog(String desModErog) {
		this.desModErog = desModErog;
	}




	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		final ModalitaErogazioneVO other = (ModalitaErogazioneVO)obj;

		if (this.codBib==null) {
			if (other.codBib != null) return false;
		}
		else if (!codBib.equals(other.codBib)) return false;
		if (this.codErog==null){
			if (other.codErog != null) return false;
		}
		else if (!codErog.equals(other.codErog)) return false;
		if (this.desModErog==null){
			if (other.desModErog != null) return false;
		}
		else if (!desModErog.equals(other.desModErog)) return false;
		if (this.flCanc==null) {
			if (other.flCanc != null) return false;
		}
		else if (!flCanc.equals(other.flCanc)) return false;
		if (this.tarBase==null) {
			if (other.tarBase != null) return false;
		}
		else if (!tarBase.equals(other.tarBase)) return false;
		if (this.costoUnitario==null) {
			if (other.costoUnitario != null) return false;
		}
		else if (!costoUnitario.equals(other.costoUnitario)) return false;

		return true;
	}

	public Locale getLocale() {
		return locale;
	}

	public void setLocale(Locale locale) {
		this.locale = locale;
	}

	public String getNumberFormat() {
		return numberFormat;
	}

	public void setNumberFormat(String numberFormat) {
		this.numberFormat = numberFormat;
	}

	public String getCodPolo() {
		return codPolo;
	}

	public void setCodPolo(String codPolo) {
		this.codPolo = codPolo;
	}

	public String getFlSvolg() {
		return flSvolg;
	}

	public void setFlSvolg(String flSvolg) {
		this.flSvolg = trimAndSet(flSvolg);
	}

	@Override
	public boolean isNuovo() {
		return id == 0;
	}

	public boolean isLocale() {
		return flSvolg.equals("L");
	}

}

/*
 * Generated by XDoclet - Do not edit!
 */
package it.iccu.sbn.ejb.domain.amministrazione;

import it.iccu.sbn.ejb.model.unimarcmodel.SbnUserType;
import it.iccu.sbn.ejb.vo.amministrazionesistema.UtenteVO;
import it.iccu.sbn.ejb.vo.amministrazionesistema.profilazionepolo.GruppoParametriVO;
import it.iccu.sbn.exception.UtenteNotFoundException;
import it.iccu.sbn.exception.UtenteNotProfiledException;
import it.iccu.sbn.persistence.dao.exception.DaoManagerException;
import it.iccu.sbn.vo.custom.amministrazione.Default;
import it.iccu.sbn.vo.custom.amministrazione.OrderedTreeElement;
import it.iccu.sbn.vo.custom.amministrazione.UserProfile;

import java.net.InetAddress;
import java.rmi.RemoteException;
import java.util.List;
import java.util.Map;

import javax.ejb.EJBObject;

/**
 * Remote interface for AmministrazioneBibliotecario.
 * @generated
 * @wtp generated
 */
public interface AmministrazioneBibliotecario extends EJBObject
{
   /**
    * <!-- begin-xdoclet-definition -->
    * @throws DaoManagerException
    * @generated //TODO: Must provide implementation for bean method stub    */
   public SbnUserType getUserSbnMarc(String ticket )
      throws DaoManagerException, RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
 * @param addr
    * @throws DaoManagerException
    * @throws UtenteNotFoundException
    */
   public it.iccu.sbn.vo.custom.amministrazione.UserProfile login(String userId, String password, InetAddress addr)
      throws it.iccu.sbn.persistence.dao.exception.DaoManagerException, it.iccu.sbn.exception.UtenteNotFoundException, it.iccu.sbn.exception.UtenteNotProfiledException, java.rmi.RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    * @throws DaoManagerException
    * @throws UtenteNotFoundException
    * @generated //TODO: Must provide implementation for bean method stub    */
   public boolean changePassword( java.lang.String userId,java.lang.String password )
      throws it.iccu.sbn.persistence.dao.exception.DaoManagerException, it.iccu.sbn.exception.UtenteNotFoundException, java.rmi.RemoteException;

   public List<UtenteVO> cercaUtenti(String cognome, String nome, String username, String biblioteca, String dataAccesso, String abilitato, String ordinamento)
   throws DaoManagerException, RemoteException;

   public OrderedTreeElement getElencoAttivita(java.lang.String idUtente)
   throws DaoManagerException, RemoteException;

   public String[] getElencoAttivitaProfilo(String idUtente)
	throws DaoManagerException, RemoteException;

   public String[] getElencoAttivitaProfiloModello(String idModello)
	throws DaoManagerException, RemoteException;

   public List getElencoParametri(String idUtente)
   	throws DaoManagerException, RemoteException;

   public List getElencoParametriModello(String nomeModello)
  	throws DaoManagerException, RemoteException;

   public boolean setProfiloBibliotecario(String idUtente, String codiceUtenteInseritore,
			  List<String> elencoAttivita,
			  List<GruppoParametriVO> elencoAuthorities,
			  List<GruppoParametriVO> elencoMateriali,
			  List<GruppoParametriVO> elencoSemantica)
	throws DaoManagerException, RemoteException;

   public boolean setModelloBibliotecario(String nomeModello, boolean nuovo, String codiceUtenteInseritore,
			  List<String> elencoAttivita,
			  List<GruppoParametriVO> elencoAuthorities,
			  List<GruppoParametriVO> elencoMateriali,
			  List<GruppoParametriVO> elencoSemantica)
	throws DaoManagerException, RemoteException;

   public List<String> getNomeBibliotecario(String idUtente)
	throws DaoManagerException, RemoteException ;

   public UtenteVO creaBibliotecario(UtenteVO bibliotecario, int utenteInseritore, boolean forzaInserimento, boolean abilitazione)
	throws DaoManagerException, RemoteException;

   public UtenteVO caricaBibliotecario(int idUtente)
   	throws DaoManagerException, RemoteException;

   public boolean controllaAbilitazioneBibliotecario(int idUtente)
    throws DaoManagerException, RemoteException;

   public int getDurataPassword()
   throws DaoManagerException, RemoteException;

   public void removeUserTicket(String ticket) throws DaoManagerException, RemoteException;

   public List<String> getElencoModelli() throws DaoManagerException, RemoteException;

   public boolean isUtenteRemoto(String codPolo, String codBib, InetAddress addr) throws RemoteException;

   public Map<String, Default> reloadDefault(int idUtenteProfessionale) throws RemoteException;

   public void resetRootPassword() throws DaoManagerException, RemoteException;

   public UserProfile getProfile(String ticket) throws DaoManagerException, UtenteNotFoundException, UtenteNotProfiledException, RemoteException;


}
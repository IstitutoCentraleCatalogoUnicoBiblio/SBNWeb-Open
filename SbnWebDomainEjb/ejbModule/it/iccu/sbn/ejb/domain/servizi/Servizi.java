/*
 * Generated by XDoclet - Do not edit!
 */
package it.iccu.sbn.ejb.domain.servizi;

import it.iccu.sbn.command.CommandInvokeVO;
import it.iccu.sbn.command.CommandResultVO;
import it.iccu.sbn.ejb.exception.AlreadyExistsException;
import it.iccu.sbn.ejb.exception.ApplicationException;
import it.iccu.sbn.ejb.exception.DataException;
import it.iccu.sbn.ejb.exception.ResourceNotFoundException;
import it.iccu.sbn.ejb.exception.ValidationException;
import it.iccu.sbn.ejb.vo.BaseVO;
import it.iccu.sbn.ejb.vo.amministrazionesistema.BibliotecaVO;
import it.iccu.sbn.ejb.vo.common.TipoAggiornamentoIter;
import it.iccu.sbn.ejb.vo.elaborazioniDifferite.RinnovoDirittiDiffVO;
import it.iccu.sbn.ejb.vo.gestionestampe.StampaServiziCorrentiVO;
import it.iccu.sbn.ejb.vo.gestionestampe.StampaServiziVO;
import it.iccu.sbn.ejb.vo.gestionestampe.common.SubReportVO;
import it.iccu.sbn.ejb.vo.servizi.AttivitaServizioVO;
import it.iccu.sbn.ejb.vo.servizi.ParametriBibliotecaVO;
import it.iccu.sbn.ejb.vo.servizi.autorizzazioni.AutorizzazioneVO;
import it.iccu.sbn.ejb.vo.servizi.autorizzazioni.ElementoSinteticaServizioVO;
import it.iccu.sbn.ejb.vo.servizi.configurazione.ModalitaPagamentoVO;
import it.iccu.sbn.ejb.vo.servizi.configurazione.ServizioWebDatiRichiestiVO;
import it.iccu.sbn.ejb.vo.servizi.configurazione.SupportoBibliotecaVO;
import it.iccu.sbn.ejb.vo.servizi.configurazione.TipoServizioVO;
import it.iccu.sbn.ejb.vo.servizi.documenti.DocumentoNonSbnRicercaVO;
import it.iccu.sbn.ejb.vo.servizi.documenti.DocumentoNonSbnVO;
import it.iccu.sbn.ejb.vo.servizi.documenti.EsemplareDocumentoNonSbnVO;
import it.iccu.sbn.ejb.vo.servizi.erogazione.FaseControlloIterVO;
import it.iccu.sbn.ejb.vo.servizi.erogazione.IterServizioVO;
import it.iccu.sbn.ejb.vo.servizi.erogazione.ModalitaErogazioneVO;
import it.iccu.sbn.ejb.vo.servizi.erogazione.MovimentoVO;
import it.iccu.sbn.ejb.vo.servizi.erogazione.PenalitaServizioVO;
import it.iccu.sbn.ejb.vo.servizi.erogazione.ServizioBibliotecaVO;
import it.iccu.sbn.ejb.vo.servizi.erogazione.SupportiModalitaErogazioneVO;
import it.iccu.sbn.ejb.vo.servizi.erogazione.TariffeModalitaErogazioneVO;
import it.iccu.sbn.ejb.vo.servizi.erogazione.ill.DatiRichiestaILLVO;
import it.iccu.sbn.ejb.vo.servizi.occupazioni.OccupazioneVO;
import it.iccu.sbn.ejb.vo.servizi.relazioni.RelazioniVO;
import it.iccu.sbn.ejb.vo.servizi.segnature.RangeSegnatureVO;
import it.iccu.sbn.ejb.vo.servizi.spectitolostudio.SpecTitoloStudioVO;
import it.iccu.sbn.ejb.vo.servizi.utenti.SinteticaUtenteVO;
import it.iccu.sbn.ejb.vo.servizi.utenti.UtenteBaseVO;
import it.iccu.sbn.ejb.vo.servizi.utenti.dettaglio.AutorizzazioniVO;
import it.iccu.sbn.ejb.vo.servizi.utenti.dettaglio.MateriaVO;
import it.iccu.sbn.ejb.vo.servizi.utenti.dettaglio.UtenteBibliotecaVO;
import it.iccu.sbn.vo.custom.servizi.MovimentoListaVO;
import it.iccu.sbn.web.constant.RicercaRichiesteType;
import it.iccu.sbn.web.integration.servizi.erogazione.ControlloDisponibilitaVO;
import it.iccu.sbn.web.integration.servizi.erogazione.StatoIterRichiesta;
import it.iccu.sbn.web.integration.servizi.erogazione.controlloIter.DatiControlloVO;

import java.rmi.RemoteException;
import java.sql.Timestamp;
import java.util.Date;
import java.util.List;
import java.util.Locale;
import java.util.Map;

public interface Servizi extends javax.ejb.EJBObject {
	/**
	    * <!-- begin-xdoclet-definition -->
	    * @throws RemoteException
	    * @throws ApplicationException
	    * @generated //TODO: Must provide implementation for bean create stub    */
	public boolean cancellaModalitaPagamento(String ticket, String[] idModalita, Integer[] idModalitaNonCancellate, BaseVO utenteVar)
	throws ApplicationException, RemoteException;
	/**
	    * <!-- begin-xdoclet-definition -->
	    * @throws RemoteException
	    * @throws ApplicationException
	    * @generated //TODO: Must provide implementation for bean create stub    */
	public ModalitaPagamentoVO aggiornaModalitaPagamento(String ticket, ModalitaPagamentoVO modalitaVO)
	throws ApplicationException, RemoteException;
	/**
	    * <!-- begin-xdoclet-definition -->
	    * @throws RemoteException
	    * @throws ApplicationException
	    * @generated //TODO: Must provide implementation for bean create stub    */
	public List getModalitaPagamento(String ticket, String codPolo, String codBib)
	throws ApplicationException, RemoteException;
	/**
	    * <!-- begin-xdoclet-definition -->
	    * @throws RemoteException
	    * @throws ApplicationException
	    * @generated //TODO: Must provide implementation for bean create stub    */
	public List getSupportiBiblioteca(String ticket, String codPolo, String codBib, String fl_svolg)
	throws ApplicationException, RemoteException;
	/**
	    * <!-- begin-xdoclet-definition -->
	    * @throws RemoteException
	    * @throws ApplicationException
	    * @generated //TODO: Must provide implementation for bean create stub    */
	public boolean cancellaSupportiBiblioteca(String ticket, String[] idSupporti, Integer[] idSupportiNonCancellati, BaseVO utenteVar)
	throws ApplicationException, RemoteException;
	/**
	    * <!-- begin-xdoclet-definition -->
	    * @throws RemoteException
	    * @throws ApplicationException
	    * @generated //TODO: Must provide implementation for bean create stub    */
	public boolean aggiornaSupportoBiblioteca(String ticket, SupportoBibliotecaVO supportoVO)
	throws ApplicationException, RemoteException;
	/**
	    * <!-- begin-xdoclet-definition -->
	    * @throws RemoteException
	    * @throws ApplicationException
	    * @generated //TODO: Must provide implementation for bean create stub    */
	public boolean verificaAutoregistrazione(String ticket, String codPolo, String codBib)
	throws ApplicationException, RemoteException;
	/**
	    * <!-- begin-xdoclet-definition -->
	    * @throws RemoteException
	    * @throws ApplicationException
	    * @generated //TODO: Must provide implementation for bean create stub    */
	public SupportoBibliotecaVO getSupportoBiblioteca(String ticket, String codPolo, String codBib, String codSupporto)
	throws ApplicationException, RemoteException;
	/**
	    * <!-- begin-xdoclet-definition -->
	    * @throws RemoteException
	    * @throws ApplicationException
	    * @generated //TODO: Must provide implementation for bean create stub    */
	public ParametriBibliotecaVO aggiornaParametriBiblioteca(String ticket, ParametriBibliotecaVO parametriVO)
	throws ApplicationException, RemoteException;
	/**
	    * <!-- begin-xdoclet-definition -->
	    * @throws RemoteException
	    * @throws ApplicationException
	    * @generated //TODO: Must provide implementation for bean create stub    */
	public ParametriBibliotecaVO getParametriBiblioteca(String ticket, String codPolo, String codBib)
	throws ApplicationException, RemoteException;
	/**
	    * <!-- begin-xdoclet-definition -->
	    * @throws RemoteException
	    * @throws ApplicationException
	    * @generated //TODO: Must provide implementation for bean create stub    */
	public boolean cancellaControlloIter(String ticket, String[] codiciControllo, int idTipoServizio, String codAttivita, String utenteVar)
	throws ApplicationException, RemoteException;
	/**
	    * <!-- begin-xdoclet-definition -->
	    * @throws RemoteException
	    * @throws ApplicationException
	    * @generated //TODO: Must provide implementation for bean create stub    */
	public boolean aggiornaControlloIter(String ticket, FaseControlloIterVO controlloIterVO, int idTipoServizio, String codAttivita, boolean nuovo, short posizione, TipoAggiornamentoIter tipoOperazione)
	throws ApplicationException, RemoteException;
	/**
	    * <!-- begin-xdoclet-definition -->
	    * @throws RemoteException
	    * @throws ApplicationException
	    * @generated //TODO: Must provide implementation for bean create stub    */
	public List getControlloIter(String ticket, int idTipoServizio, String codAttivita)
	throws ApplicationException, RemoteException;
	/**
	    * <!-- begin-xdoclet-definition -->
	    * @throws RemoteException
	    * @throws ApplicationException
	    * @generated //TODO: Must provide implementation for bean create stub    */
	public boolean cancellaIterServizio(String ticket, String[] progressiviIter, int idTipoServizio, String utenteVar)
	throws ApplicationException, RemoteException;
	/**
	    * <!-- begin-xdoclet-definition -->
	    * @throws RemoteException
	    * @throws ApplicationException
	    * @generated //TODO: Must provide implementation for bean create stub    */
	public boolean aggiornaIter(String ticket, int idTipoServizio, int progr_iter_selezionato, IterServizioVO iter, TipoAggiornamentoIter tipoOperazione, boolean nuovo)
	throws ApplicationException, RemoteException;
	/**
	    * <!-- begin-xdoclet-definition -->
	    * @throws RemoteException
	    * @throws ApplicationException
	    * @generated //TODO: Must provide implementation for bean create stub    */
	public boolean aggiornaAttivitaBibliotecario(String ticket, List bibliotecariDaAggiungere, List bibliotecariDaRimuovere,
			BaseVO infoBase, int idTipoServizio, String codiceAttivita)
	throws ApplicationException, RemoteException;
	/**
	    * <!-- begin-xdoclet-definition -->
	    * @throws RemoteException
	    * @throws ApplicationException
	    * @generated //TODO: Must provide implementation for bean create stub    */
	public Map getListeAttivitaBibliotecari(String ticket, TipoServizioVO tipoServizioVO, String codAttivita)
	throws ApplicationException, RemoteException;
	/**
	    * <!-- begin-xdoclet-definition -->
	    * @throws RemoteException
	    * @throws ApplicationException
	    * @generated //TODO: Must provide implementation for bean create stub    */
	public boolean aggiornaTariffeModalitaErogazione(String ticket, TariffeModalitaErogazioneVO tariffeVO, boolean nuovo, int idTipoServizio)
	throws ApplicationException, RemoteException;
	/**
	    * <!-- begin-xdoclet-definition -->
	    * @throws RemoteException
	    * @throws ApplicationException
	    * @generated //TODO: Must provide implementation for bean create stub    */
	public boolean aggiornaSupportiModalitaErogazione(String ticket, SupportiModalitaErogazioneVO tariffeVO, boolean nuovo, int idSupportiBiblioteca)
	throws ApplicationException, RemoteException;

	/**
	    * <!-- begin-xdoclet-definition -->
	    * @throws RemoteException
	    * @throws ApplicationException
	    * @generated //TODO: Must provide implementation for bean create stub    */
	public boolean aggiornaModalitaErogazione(String ticket, ModalitaErogazioneVO tariffeVO, boolean nuovo)
	throws ApplicationException, RemoteException;

	/**
	    * <!-- begin-xdoclet-definition -->
	    * @throws RemoteException
	    * @throws ApplicationException
	    * @generated //TODO: Must provide implementation for bean create stub    */
	public boolean aggiornaModuloRichiesta(String ticket, List<ServizioWebDatiRichiestiVO> lstServizioWebDatiRichiestiVO)
	throws ApplicationException, RemoteException;

	/**
	    * <!-- begin-xdoclet-definition -->
	    * @throws RemoteException
	    * @throws ApplicationException
	    * @generated //TODO: Must provide implementation for bean create stub    */
	public boolean aggiornaTipoServizio(String ticket, TipoServizioVO tipoServizioVO)
	throws ApplicationException, RemoteException;

	/**
	    * <!-- begin-xdoclet-definition -->
	    * @throws RemoteException
	    * @throws ApplicationException
	    * @generated //TODO: Must provide implementation for bean create stub    */
	public boolean aggiornaServizio(String ticket, ServizioBibliotecaVO servizioVO, int idTipoServizio)
	throws ApplicationException, RemoteException;

	/**
	    * <!-- begin-xdoclet-definition -->
	    * @throws RemoteException
	    * @throws ApplicationException
	    * @generated //TODO: Must provide implementation for bean create stub    */
	public boolean cancellaServizio(String ticket, ServizioBibliotecaVO servizioVO, int idTipoServizio)
	throws ApplicationException, RemoteException;

	/**
	    * <!-- begin-xdoclet-definition -->
	    * @throws RemoteException
	    * @throws ApplicationException
	    * @generated //TODO: Must provide implementation for bean create stub    */
	public boolean cancellaTariffeModalitaErogazione(String ticket, TariffeModalitaErogazioneVO modErog, int idTipoServizio)
	throws ApplicationException, RemoteException;

	/**
	    * <!-- begin-xdoclet-definition -->
	    * @throws RemoteException
	    * @throws ApplicationException
	    * @generated //TODO: Must provide implementation for bean create stub    */
	public boolean cancellaSupportiModalitaErogazione(String ticket, SupportiModalitaErogazioneVO modErog, int idSupportiBiblioteca)
	throws ApplicationException, RemoteException;

	/**
	    * <!-- begin-xdoclet-definition -->
	    * @throws RemoteException
	    * @throws ApplicationException
	    * @generated //TODO: Must provide implementation for bean create stub    */
	public boolean cancellaModalitaErogazione(String ticket, ModalitaErogazioneVO modErog)
	throws ApplicationException, RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    * @throws ResourceNotFoundException
    * @throws ApplicationException
    * @generated //TODO: Must provide implementation for bean create stub    */
   public java.util.List getListaAutorizzazioni(String ticket,  it.iccu.sbn.ejb.vo.servizi.autorizzazioni.RicercaAutorizzazioneVO ricercaAut )
      throws ResourceNotFoundException, ApplicationException, RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    * @throws DataException
    * @throws ApplicationException
    * @generated //TODO: Must provide implementation for bean create stub    */
   public boolean insertAutorizzazione(String ticket,  it.iccu.sbn.ejb.vo.servizi.autorizzazioni.AutorizzazioneVO recAutorizzazione )
      throws org.hibernate.exception.DataException, ApplicationException, RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    * @throws DataException
    * @throws ApplicationException
    * @generated //TODO: Must provide implementation for bean create stub    */
   public boolean updateAutorizzazione(String ticket,  it.iccu.sbn.ejb.vo.servizi.autorizzazioni.AutorizzazioneVO recAutorizzazione )
      throws org.hibernate.exception.DataException, ApplicationException, RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    * @throws DataException
    * @throws ApplicationException
    * @generated //TODO: Must provide implementation for bean create stub    */
   public boolean cancelAutorizzazione(String ticket,  it.iccu.sbn.ejb.vo.servizi.autorizzazioni.AutorizzazioneVO recAutorizzazione )
      throws org.hibernate.exception.DataException, ApplicationException, RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    * @throws DataException
    * @throws ApplicationException
    * @generated //TODO: Must provide implementation for bean create stub    */
   public boolean esistonoUtentiCon(String ticket, String codPolo, String codBib, String codAutorizzazione)
   	throws org.hibernate.exception.DataException, ApplicationException, RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    * @throws DataException
    * @throws ApplicationException
    * @generated //TODO: Must provide implementation for bean create stub    */
   public boolean esistonoUtentiConOcc(String ticket, String codPolo, String codBib, int idOcc)
   	throws org.hibernate.exception.DataException, ApplicationException, RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    * @throws DataException
    * @throws ApplicationException
    * @generated //TODO: Must provide implementation for bean create stub    */
   public boolean esistonoUtentiConSpecTit(String ticket, String codPolo, String codBib, int idSpecTit)
   	throws org.hibernate.exception.DataException, ApplicationException, RemoteException;

   public List getListaServiziPerTipoServizio(String ticket, String codicePolo, String codiceBiblioteca, String codTipoServizio)
	throws ApplicationException, RemoteException;
   /**
    * <!-- begin-xdoclet-definition -->
    * @throws ResourceNotFoundException
    * @throws ApplicationException
    * @generated //TODO: Must provide implementation for bean create stub    */
   public java.util.List getListaServizi(String ticket,  java.lang.String codicePolo, java.lang.String codiceBiblioteca,java.lang.String codiceAutorizzazione )
      throws ResourceNotFoundException, ApplicationException, RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    * @throws RemoteException
    * @generated     */
   public ServizioBibliotecaVO getServizioBiblioteca(String ticket, String codPolo, String codBib, String codTipoServizio, String codServizio)
   	throws RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    * @throws RemoteException
    * @generated     */
	public MovimentoListaVO getMovimentoListaVO(String ticket, MovimentoVO movimentoSelezionato, Locale locale)
	throws RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    * @throws ResourceNotFoundException
    * @throws ApplicationException
    * @generated //TODO: Must provide implementation for bean create stub    */
   public List<ElementoSinteticaServizioVO> getListaServiziBiblioteca(String ticket, List serviziAssociati, String codicePolo, String codiceBiblioteca)
	throws ResourceNotFoundException, ApplicationException, RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    * @throws ResourceNotFoundException
    * @throws ApplicationException
    * @generated //TODO: Must provide implementation for bean create stub    */
	public List getListaServiziAutorizzazione(String ticket, UtenteBibliotecaVO utente)
		throws ResourceNotFoundException, ApplicationException, RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    * @throws ResourceNotFoundException
    * @throws ApplicationException
    * @generated //TODO: Must provide implementation for bean create stub    */
	public String getListaAutorizzazioniServizio(String ticket, String codPoloSer, String codBibSer, int idServ)
		throws ResourceNotFoundException, ApplicationException, RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    * @throws ResourceNotFoundException
    * @throws ApplicationException
    * @generated //TODO: Must provide implementation for bean create stub    */
   //public int getAutomaticoX(String ticket,  java.lang.String codAutomaticoX,java.lang.String codAutorizzazione )
   public int getAutomaticoX(String ticket,  java.lang.String codicePolo, java.lang.String codiceBib, java.lang.String codAutorizzazione, char codiceAutomaticoX )
      throws ResourceNotFoundException, ApplicationException, RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    * @throws ResourceNotFoundException
    * @throws ApplicationException
    * @generated //TODO: Must provide implementation for bean create stub    */
   public List<MovimentoListaVO> getListeTematiche(String ticket, MovimentoVO filtroMov, boolean attivitaAttuale) throws ResourceNotFoundException, ApplicationException,
	RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    * @throws ResourceNotFoundException
    * @throws ApplicationException
    * @generated //TODO: Must provide implementation for bean create stub    */
   public List<StampaServiziCorrentiVO> getStampaListeTematiche(String ticket, MovimentoVO filtroMov, boolean attivitaAttuale) throws ResourceNotFoundException, ApplicationException,
	RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
 * @param idBatch
    * @throws ResourceNotFoundException
    * @throws ApplicationException
    * @generated //TODO: Must provide implementation for bean create stub    */
   public SubReportVO getStampaListeTematicheStorico(String ticket, StampaServiziVO sscVO) throws ResourceNotFoundException, ApplicationException,
	RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    * @throws ResourceNotFoundException
    * @throws ApplicationException
    * @generated //TODO: Must provide implementation for bean create stub    */
   public void cancellaOccupazioni(String ticket, Integer[] id, String uteVar)
   throws RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    * @throws ResourceNotFoundException
    * @throws ApplicationException
    * @generated //TODO: Must provide implementation for bean create stub    */
   public java.util.List getListaOccupazioni(String ticket,  it.iccu.sbn.ejb.vo.servizi.occupazioni.RicercaOccupazioneVO ricerca )
      throws ResourceNotFoundException, ApplicationException, RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    * @throws ResourceNotFoundException
    * @throws ApplicationException
    * @generated //TODO: Must provide implementation for bean create stub    */
   public void aggiornaOccupazione(String ticket, OccupazioneVO occupazioneVO, boolean  nuovo)
   throws AlreadyExistsException, RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    * @throws ResourceNotFoundException
    * @throws ApplicationException
    * @generated //TODO: Must provide implementation for bean create stub    */
   public void cancellaMaterie(String ticket, Integer[] idMaterie, String uteVar)
   throws ApplicationException, RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    * @throws ResourceNotFoundException
    * @throws ApplicationException
    * @generated //TODO: Must provide implementation for bean create stub    */
   public void aggiornaMateria(String ticket, MateriaVO materiaVO, boolean nuovo)
   throws AlreadyExistsException, RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    * @throws ResourceNotFoundException
    * @throws ApplicationException
    * @generated //TODO: Must provide implementation for bean create stub    */
   public java.util.List getListaMaterie(String ticket,  it.iccu.sbn.ejb.vo.servizi.utenti.dettaglio.RicercaMateriaVO meteria )
      throws RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    * @throws ResourceNotFoundException
    * @throws ApplicationException
    * @generated //TODO: Must provide implementation for bean create stub    */
   public void aggiornaSpecTitoloStudio(String ticket, SpecTitoloStudioVO specTitoloVO, boolean nuovo)
   throws AlreadyExistsException, RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    * @throws ResourceNotFoundException
    * @throws ApplicationException
    * @generated //TODO: Must provide implementation for bean create stub    */
   public void cancellaSpecTitoloStudio(String ticket, Integer[] id, String uteVar)
   throws RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    * @throws ResourceNotFoundException
    * @throws ApplicationException
    * @generated //TODO: Must provide implementation for bean create stub    */
   public java.util.List getListaTitoloStudio(String ticket,  it.iccu.sbn.ejb.vo.servizi.spectitolostudio.RicercaTitoloStudioVO ricTDS )
      throws ResourceNotFoundException, ApplicationException, RemoteException, Exception;

   /**
    * <!-- begin-xdoclet-definition -->
    * @throws ResourceNotFoundException
    * @throws ApplicationException
    * @generated //TODO: Must provide implementation for bean create stub    */
   public java.util.List getListaUtenti(String ticket,  it.iccu.sbn.ejb.vo.servizi.utenti.dettaglio.RicercaUtenteBibliotecaVO uteRicerca )
      throws ResourceNotFoundException, ApplicationException, ValidationException, RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    * @throws ResourceNotFoundException
    * @throws ApplicationException
    * @generated //TODO: Must provide implementation for bean create stub    */
   public java.util.List getListaUtenti(it.iccu.sbn.ejb.vo.servizi.utenti.dettaglio.RicercaUtenteBibliotecaVO uteRicerca )
      throws ResourceNotFoundException, ApplicationException, ValidationException, RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    * @throws ResourceNotFoundException
    * @throws ApplicationException
    * @generated //TODO: Must provide implementation for bean create stub    */
   public java.util.List getListaAnagServiziUte(String ticket, UtenteBibliotecaVO utente )
      throws ResourceNotFoundException, ApplicationException, RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    * @throws ResourceNotFoundException
    * @throws ApplicationException
    * @generated //TODO: Must provide implementation for bean create stub    */
   //public boolean updateDataRinnovoAut(String ticket,  java.util.List lstUte,java.lang.String dataRinnAut )
   public boolean updateDataRinnovoAut(String ticket,  String[] lstCodUte,java.lang.String dataRinnAut )
      throws org.hibernate.exception.DataException, ApplicationException, RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    * @throws ResourceNotFoundException
    * @throws ApplicationException
    * @generated //TODO: Must provide implementation for bean create stub    */
   public it.iccu.sbn.ejb.vo.servizi.utenti.dettaglio.UtenteBibliotecaVO getDettaglioUtente(String ticket,  it.iccu.sbn.ejb.vo.servizi.utenti.dettaglio.RicercaUtenteBibliotecaVO richiestaUte, String numberFormat, Locale locale )
      throws ResourceNotFoundException, ApplicationException, RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    * @throws ResourceNotFoundException
    * @throws ApplicationException
    * @generated //TODO: Must provide implementation for bean create stub    */
   public it.iccu.sbn.ejb.vo.servizi.utenti.dettaglio.UtenteBibliotecaVO getDettaglioUtenteBase(String ticket,  it.iccu.sbn.ejb.vo.servizi.utenti.dettaglio.RicercaUtenteBibliotecaVO richiestaUte, String numberFormat, Locale locale )
      throws ResourceNotFoundException, ApplicationException, RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    * @throws ResourceNotFoundException
    * @throws ApplicationException
    * @generated //TODO: Must provide implementation for bean create stub    */
   public boolean insertUtente(String ticket,  it.iccu.sbn.ejb.vo.servizi.utenti.dettaglio.UtenteBibliotecaVO recUte )
      throws org.hibernate.exception.DataException, ApplicationException, RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
 * @param ticket
    * @throws ResourceNotFoundException
    * @throws ApplicationException
    * @generated //TODO: Must provide implementation for bean create stub    */
   public boolean importaUtente(String ticket,  it.iccu.sbn.ejb.vo.servizi.utenti.dettaglio.UtenteBibliotecaVO recUte )
      throws org.hibernate.exception.DataException, ApplicationException, RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
 * @param ticket
    * @throws ResourceNotFoundException
    * @throws ApplicationException
    * @generated //TODO: Must provide implementation for bean create stub    */
   public boolean aggiornaChiaveUtenteById(String ticket,  String idUtente, String chiaveUte )
      throws org.hibernate.exception.DataException, ApplicationException, RemoteException;

   /**
     * <!-- begin-xdoclet-definition -->
	 * @param codPolo codice polo biblioteca operante
	 * @param codBib codice biblioteca operante
	 * @param bibVO  dati biblioteca da importare
	 * @param vo     dati sull'utente che sta effettuando l'operazione
	 * @param locale locale
	 * @return       Istanza di UtenteBibliotecaVO
	 *
	 * @throws ApplicationException
	 */
   public UtenteBibliotecaVO importaBibliotecaComeUtente(String ticket, String codPolo, String codBib, BibliotecaVO bibVO, BaseVO vo, Locale locale)
	throws ApplicationException, RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    * @throws ResourceNotFoundException
    * @throws ApplicationException
    * @generated //TODO: Must provide implementation for bean create stub    */
   public boolean updateUtente(String ticket,  it.iccu.sbn.ejb.vo.servizi.utenti.dettaglio.UtenteBibliotecaVO recUte )
      throws org.hibernate.exception.DataException, ApplicationException, RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    * @throws ResourceNotFoundException
    * @throws ApplicationException
    * @generated //TODO: Must provide implementation for bean create stub    */
   public boolean cancelUtenteBiblioteca(String ticket,  it.iccu.sbn.ejb.vo.servizi.utenti.dettaglio.UtenteBibliotecaVO recUte )
      throws org.hibernate.exception.DataException, ApplicationException, RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    * @throws ResourceNotFoundException
    * @throws ApplicationException
    * @generated //TODO: Must provide implementation for bean create stub    */
   public int verificaMovimentiUtente(String ticket,  java.lang.String idUte )
      throws ResourceNotFoundException, ApplicationException, RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    * @throws ApplicationException
    * @generated //TODO: Must provide implementation for bean create stub    */
   public ControlloDisponibilitaVO controlloDisponibilita(String ticket, ControlloDisponibilitaVO cdvo)
   	throws ApplicationException, RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    * @throws ApplicationException
    * @generated //TODO: Must provide implementation for bean create stub    */
   public boolean esisteRichiestaPerUtente(String ticket, MovimentoVO movimento)
   	throws ApplicationException, RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    * @throws ResourceNotFoundException
    * @throws ApplicationException
    * @generated //TODO: Must provide implementation for bean create stub    */
   public Map getListaMovimentiPerErogazione(String ticket, MovimentoVO filtroMov, RicercaRichiesteType filtro, Locale locale)
      throws ResourceNotFoundException, ApplicationException, RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    * @throws ResourceNotFoundException
    * @throws ApplicationException
    * @generated //TODO: Must provide implementation for bean create stub    */
   public void cancellaRichieste(String ticket, Long[] codRichieste, String uteVar)
      throws org.hibernate.exception.DataException, ApplicationException, RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    * @throws ResourceNotFoundException
    * @throws ApplicationException
    * @generated //TODO: Must provide implementation for bean create stub    */
   public void rifiutaRichieste(String ticket, Long[] codRichieste, String uteVar, boolean inviaMailNotifica)
      throws org.hibernate.exception.DataException, ApplicationException, RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    * @throws ResourceNotFoundException
    * @throws ApplicationException
    * @generated //TODO: Must provide implementation for bean create stub    */
   public MovimentoVO aggiornaRichiesta(String ticket, MovimentoVO movimento, int idServizio)
   	throws org.hibernate.exception.DataException, ApplicationException, RemoteException;

   public MovimentoVO aggiornaRichiesta(String ticket, MovimentoVO movimento, int idServizio, boolean update_all)
   	throws org.hibernate.exception.DataException, ApplicationException, RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    * @throws ResourceNotFoundException
    * @throws ApplicationException
    * @generated //TODO: Must provide implementation for bean create stub    */
   public MovimentoVO aggiornaRichiestaPerCambioServizio(String ticket, MovimentoVO nuovaRichiesta, long codRichDaCancellare, int idServizio, String uteVar)
   throws ApplicationException, RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    * @throws ResourceNotFoundException
    * @throws ApplicationException
    * @generated //TODO: Must provide implementation for bean create stub    */
   public int getNumeroMovimentiAttivi(String ticket, String codPolo, String codBibInv, String codSerieInv, int codInven)
   throws ApplicationException, RemoteException;
   /**
    * <!-- begin-xdoclet-definition -->
    * @throws ResourceNotFoundException
    * @throws ApplicationException
    * @generated //TODO: Must provide implementation for bean create stub    */
   public int getNumeroRichiesteAttivePerUtente(String ticket, MovimentoVO anaMov)
    throws ApplicationException, RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    * @throws ResourceNotFoundException
    * @throws ApplicationException
    * @generated //TODO: Must provide implementation for bean create stub    */
   public int getNumeroMovimentiAttiviPerUtente(String ticket, MovimentoVO anaMov)
   throws ApplicationException, RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    * @throws ResourceNotFoundException
    * @throws ApplicationException
    * @generated //TODO: Must provide implementation for bean create stub    */
   public java.util.List getListaMovimentiAttiviPerUtente(String ticket, MovimentoVO anaMov)
   throws ApplicationException, RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    * @throws ResourceNotFoundException
    * @throws ApplicationException
    * @generated //TODO: Must provide implementation for bean create stub    */
   public int getNumeroRichiesteGiornalierePerServizio(String ticket, MovimentoVO anaMov)
   throws ApplicationException, RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    * @throws ResourceNotFoundException
    * @throws ApplicationException
    * @generated //TODO: Must provide implementation for bean create stub    */
   public int getNumeroRichiesteGiornalierePerTipoServizio(String ticket, MovimentoVO anaMov)
   throws ApplicationException, RemoteException;


   /**
    * <!-- begin-xdoclet-definition -->
    * @throws ResourceNotFoundException
    * @throws ApplicationException
    * @generated //TODO: Must provide implementation for bean create stub    */
   public java.util.List getListaSollecitiUte(String ticket,  it.iccu.sbn.ejb.vo.servizi.erogazione.MovimentoVO anaMov,RicercaRichiesteType filtro )
      throws ResourceNotFoundException, ApplicationException, RemoteException;

  /**
    * <!-- begin-xdoclet-definition -->
 * @param fl_svolg
    * @throws ResourceNotFoundException
    * @throws ApplicationException
    * @generated //TODO: Must provide implementation for bean create stub    */
   //public it.iccu.sbn.ejb.vo.servizi.erogazione.TariffeModalitaErogazioneVO getTariffaModalitaErogazione(String ticket,  java.lang.String codiceBiblioteca,java.lang.String codErog,java.lang.String codTipoServ,java.lang.String ticket )
   public List<TariffeModalitaErogazioneVO> getTariffaModalitaErogazione(String ticket, String codicePolo, String codiceBiblioteca, String codTipoServ, String fl_svolg)
      throws RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
 * @param fl_svolg
    * @throws ResourceNotFoundException
    * @throws ApplicationException
    * @generated //TODO: Must provide implementation for bean create stub    */
   //public it.iccu.sbn.ejb.vo.servizi.erogazione.SupportiModalitaErogazioneVO getSupportoModalitaErogazione(String ticket,  java.lang.String codiceBiblioteca,java.lang.String codErog,java.lang.String codSupporto,java.lang.String ticket )
   public List<SupportiModalitaErogazioneVO> getSupportoModalitaErogazione(String ticket, String codicePolo, String codiceBiblioteca, String codSupporto, String fl_svolg)
      throws RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    * @throws ResourceNotFoundException
    * @throws ApplicationException
    * @generated //TODO: Must provide implementation for bean create stub    */
   //public it.iccu.sbn.ejb.vo.servizi.erogazione.ModalitaErogazioneVO getTariffaModalitaErogaz(String ticket,  java.lang.String codiceBiblioteca,java.lang.String codErog,java.lang.String ticket )
   public List<ModalitaErogazioneVO> getTariffaModalitaErogaz(String ticket, String codicePolo, String codiceBiblioteca )
      throws RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    * @throws ResourceNotFoundException
    * @throws ApplicationException
    * @generated //TODO: Must provide implementation for bean create stub    */
   public List<IterServizioVO> getListaIterServizio(String ticket, String codicePolo, String codiceBiblioteca, String codTipoServ)
	throws RemoteException;

   public IterServizioVO getIterServizio(String ticket, String codicePolo, String codiceBiblioteca, String codTipoServ, StatoIterRichiesta stato)
	throws RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    * @throws ResourceNotFoundException
    * @throws ApplicationException
    * @generated //TODO: Must provide implementation for bean create stub    */
   public List<SinteticaUtenteVO> verificaEsistenzaUtentePolo(String ticket, UtenteBibliotecaVO uteAna)  throws RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    * @throws ResourceNotFoundException
    * @throws ApplicationException
    * @generated //TODO: Must provide implementation for bean create stub    */
   public List<SinteticaUtenteVO> verificaEsistenzaUtentePolo(String ticket, BibliotecaVO bibVO, String codPolo, String codBib, BaseVO vo) throws RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    * @throws ResourceNotFoundException
    * @throws ApplicationException
    * @generated //TODO: Must provide implementation for bean create stub    */
   public int getNumMovimentiAttiviPerServizioUtente(String ticket, int idUtenteBiblioteca, int idServizio) throws RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    * @throws ResourceNotFoundException
    * @throws ApplicationException
    * @generated //TODO: Must provide implementation for bean create stub    */
   public AutorizzazioneVO getTipoAutorizzazione(String ticket, String codPolo, String codBib, String codTipoAut)
   		throws RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    * @throws RemoteException
    * @generated //TODO: Must provide implementation for bean create stub    */
   public java.util.List getListaTipiServizio(String ticket, String codPolo, String codBib)
   throws RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    * @throws RemoteException
    * @generated //TODO: Must provide implementation for bean create stub    */
   public java.util.List<String> getListaCodiciTipiServizio(String ticket, String codPolo, String codBib)
   		throws RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
 * @param natura
    * @throws RemoteException
    * @generated //TODO: Must provide implementation for bean create stub    */
   public List<ServizioWebDatiRichiestiVO> getServizioWebDatiRichiesti(String ticket, String codPolo, String codBib, String codTipoServizio, String natura)
   throws ApplicationException, RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    * @throws RemoteException
    * @generated //TODO: Must provide implementation for bean create stub    */
   public TipoServizioVO getTipoServizio(String ticket, String codPolo, String codBib, String codTipoServizio)
   throws RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
 * @param remoto
    * @throws RemoteException
    * @generated //TODO: Must provide implementation for bean create stub    */
	public List<ServizioBibliotecaVO> getServiziAttivi(String ticket,
			String codPolo, String codBibUte, String codUtente, String codBib,
			Timestamp data, boolean remoto)
   throws RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    * @throws RemoteException
    * @generated //TODO: Must provide implementation for bean create stub    */
   public boolean isUtenteAutorizzato(String ticket, String codPolo,
		   String codBibUte, String codUtente, String codBib, String codTipoServ, String codServ, Timestamp data)
   throws RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    * @throws RemoteException
    * @generated //TODO: Must provide implementation for bean create stub    */
   public boolean isUtenteSospeso(String ticket, String codPolo,
		   String codBibUte, String codUtente, String codBib, String codTipoServ, String codServ, Timestamp data)
   throws RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    * @throws RemoteException
    * @generated //TODO: Must provide implementation for bean create stub    */
   public List<ServizioBibliotecaVO> getServiziAttivi(String ticket, String codPolo, String codBib, String codFrui)
   throws RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    * @throws RemoteException
    * @generated //TODO: Must provide implementation for bean create stub    */
   public void scambioControlliIter(String ticket, int idTipoServizio, String codAttivita, short progressivo, TipoAggiornamentoIter tipoOp)
   throws RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    * @throws RemoteException
    * @generated //TODO: Must provide implementation for bean create stub    */
   public void scambioIter(String ticket, int id_tipo_servizio, int progressivo, TipoAggiornamentoIter tipoOp)
   throws RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    * @throws RemoteException
    * @generated //TODO: Must provide implementation for bean create stub    */
   public UtenteBaseVO getUtente(String ticket, String codPolo, String codBibUte, String codUtente, String codBib)
   throws RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    * @throws RemoteException
    * @generated //TODO: Must provide implementation for bean create stub    */
   public UtenteBaseVO getUtente(String ticket, String codUtente) throws RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    * @throws RemoteException
    * @generated //TODO: Must provide implementation for bean create stub    */
   public List<AttivitaServizioVO> getListaAttivitaSuccessive(String ticket, String codPolo, String codBib, String codTipoServ, int progrIter, DatiRichiestaILLVO datiILL)
   throws RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    * @throws RemoteException
    * @generated //TODO: Must provide implementation for bean create stub    */
   public AttivitaServizioVO getAttivita(String ticket, String codPolo, IterServizioVO iterServizioVO)
   throws RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    * @throws RemoteException
    * @generated //TODO: Must provide implementation for bean create stub    */
   public PenalitaServizioVO getPenalitaServizio(String ticket, String codPolo, String codBib, String codTipoServizio, String codServizio)
   throws RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    * @throws RemoteException
    * @generated //TODO: Must provide implementation for bean create stub    */
   public void sospendiDirittoUtente(String ticket, MovimentoVO mov, Date dataSospensione, BaseVO datiModifica)
   throws ApplicationException, RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    * @throws RemoteException
    * @generated //TODO: Must provide implementation for bean create stub    */
   public boolean esistonoPrenotazioni(String ticket, UtenteBaseVO utenteBaseVO, MovimentoVO anaMov, Timestamp data)
   throws RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    * @throws RemoteException
    * @generated //TODO: Must provide implementation for bean create stub    */
   public boolean esistonoPrenotazioni(String ticket, MovimentoVO anaMov, Timestamp data)
   throws RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    * @throws RemoteException
    * @generated //TODO: Must provide implementation for bean create stub    */
   public int getNumeroPrenotazioni(String ticket, MovimentoVO anaMov)
   throws RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    * @throws RemoteException
    * @generated //TODO: Must provide implementation for bean create stub    */
   public int getNumeroPrenotazioni(String ticket)
   throws RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
 * @param tipoOrd
    * @throws RemoteException
    * @generated //TODO: Must provide implementation for bean create stub    */
   public List<MovimentoListaVO> getPrenotazioni(String ticket, MovimentoVO anaMov, String codBibDest, Locale locale, String tipoOrd) throws RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
 * @param ordinamento
    * @throws RemoteException
    * @generated //TODO: Must provide implementation for bean create stub    */
   public List getProroghe(String ticket, MovimentoVO anaMov, String codBibDest, Locale locale, String ordinamento) throws RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
 * @param tipoOrd
    * @throws RemoteException
    * @generated //TODO: Must provide implementation for bean create stub    */
   public List getGiacenze(String ticket, MovimentoVO anaMov, String codBibDest, Locale locale, String tipoOrd) throws RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    * @throws RemoteException
    * @generated //TODO: Must provide implementation for bean create stub    */
   public boolean esistePrenotazionePerUtente(String ticket, MovimentoVO movimento) throws RemoteException;

   /**
    *
    * <!-- begin-xdoclet-definition -->
    * @throws RemoteException
    * @generated //TODO: Must provide implementation for bean create stub     */
   public void aggiornaSegnatura(String ticket, RangeSegnatureVO segnaturaVO, boolean isNew) throws RemoteException;

   /**
    *
    * <!-- begin-xdoclet-definition -->
    * @throws RemoteException
    * @generated //TODO: Must provide implementation for bean create stub     */
   public void cancellaSegnature(String ticket, Integer[] id, String uteVar) throws RemoteException;

   /**
    *
    * <!-- begin-xdoclet-definition -->
    * @throws RemoteException
    * @generated //TODO: Must provide implementation for bean create stub     */
   public List caricaSegnature(String ticket, String codPolo, String codBib, RangeSegnatureVO segnaturaVO) throws RemoteException;

   /**
    *
    * <!-- begin-xdoclet-definition -->
    * @throws RemoteException
    * @generated //TODO: Must provide implementation for bean create stub     */
   public List<RelazioniVO> caricaRelazioni(String ticket, String codPolo, String codBib, String codRelazione) throws RemoteException;

   /**
    *
    * <!-- begin-xdoclet-definition -->
    * @throws RemoteException
    * @generated //TODO: Must provide implementation for bean create stub     */
   public void cancellaRelazioni(String ticket, Integer[] id, String uteVar) throws RemoteException;

   /**
    *
    * <!-- begin-xdoclet-definition -->
    * @throws RemoteException
    * @generated //TODO: Must provide implementation for bean create stub     */
   public void riattivaRelazioni(String ticket, Integer[] id, String uteVar) throws RemoteException;

   /**
    *
    * <!-- begin-xdoclet-definition -->
    * @throws RemoteException
    * @generated //TODO: Must provide implementation for bean create stub     */
   public void aggiornaRelazione(String ticket, RelazioniVO relazioneVO) throws RemoteException;

   /**
    *
    * <!-- begin-xdoclet-definition -->
    * @throws RemoteException
    * @generated //TODO: Must provide implementation for bean create stub     */
	public boolean checkRelazioneTipoServizioCodFruizione(String ticket, String codPolo, String codBib, String codTipoServ, String codFrui)	throws RemoteException;

	 /**
	    *
	    * <!-- begin-xdoclet-definition -->
	    * @throws RemoteException
	    * @generated //TODO: Must provide implementation for bean create stub     */
	public DocumentoNonSbnVO getCategoriaFruizioneSegnatura(String ticket, MovimentoVO movimento) throws RemoteException;

	public DocumentoNonSbnVO getCategoriaFruizioneSegnatura(
			String ticket, String codPolo, String codBib, String ordSegn) throws ApplicationException, RemoteException;

	 /**
	    *
	    * <!-- begin-xdoclet-definition -->
	    * @throws RemoteException
	    * @generated //TODO: Must provide implementation for bean create stub     */
	public Timestamp calcolaRedisponibilitaAlServizio(String ticket,
			String codPolo, String codBib, String codTipoServ,
			Timestamp dataInizioPrevista) throws RemoteException;

	 /**
	    *
	    * <!-- begin-xdoclet-definition -->
	    * @throws RemoteException
	    * @generated //TODO: Must provide implementation for bean create stub     */
	public boolean esisteMovimentoAttivo(String ticket,	MovimentoVO movimento) throws RemoteException;

	 /**
	    *
	    * <!-- begin-xdoclet-definition -->
	    * @throws RemoteException
	    * @generated //TODO: Must provide implementation for bean create stub     */
	public boolean movimentoStatoPrecedeConsegnaDocLett(String ticket, MovimentoListaVO movimento) throws RemoteException;


	 /**
	    *
	    * <!-- begin-xdoclet-definition -->
	    * @throws RemoteException
	    * @generated //TODO: Must provide implementation for bean create stub     */
	public List<DocumentoNonSbnVO> getListaDocumentiNonSbn(String ticket, DocumentoNonSbnRicercaVO filtro) throws RemoteException;

	 /**
	    *
	    * <!-- begin-xdoclet-definition -->
	    * @throws RemoteException
	    * @generated //TODO: Must provide implementation for bean create stub     */
	public List<EsemplareDocumentoNonSbnVO> getListaEsemplariDocumentiNonSbn(String ticket, DocumentoNonSbnRicercaVO filtro) throws RemoteException;

	 /**
	    *
	    * <!-- begin-xdoclet-definition -->
	    * @throws RemoteException
	    * @generated //TODO: Must provide implementation for bean create stub     */
	public List<DocumentoNonSbnVO> aggiornaDocumentoNonSbn(String ticket, List<DocumentoNonSbnVO> documenti) throws RemoteException, ApplicationException;

	 /**
	    *
	    * <!-- begin-xdoclet-definition -->
	    * @throws RemoteException
	    * @generated //TODO: Must provide implementation for bean create stub     */
	public void aggiornaEsemplariDocumentoNonSbn(String ticket, List<EsemplareDocumentoNonSbnVO> esemplari) throws RemoteException;

	 /**
	    *
	    * <!-- begin-xdoclet-definition -->
	    * @throws RemoteException
	    * @generated //TODO: Must provide implementation for bean create stub     */
	public DocumentoNonSbnVO getDettaglioDocumentoNonSbn(String ticket, DocumentoNonSbnVO documento) throws RemoteException, ApplicationException;

	public CommandResultVO invoke(CommandInvokeVO command) throws RemoteException, ApplicationException;
	 /**
	    *
	    * <!-- begin-xdoclet-definition -->
	    * @throws RemoteException
	    * @generated //TODO: Must provide implementation for bean create stub     */
	public RinnovoDirittiDiffVO gestioneDifferitaRinnovoDiritti(RinnovoDirittiDiffVO rinnDirVO ) throws RemoteException, ApplicationException;

	 /**
	    *
	    * <!-- begin-xdoclet-definition -->
	    * @throws RemoteException
	    * @generated //TODO: Must provide implementation for bean create stub     */
	public AutorizzazioniVO getAutorizzazioneByProfessione(String ticket, String codicePolo,	String codiceBib, int idOcc  ) throws RemoteException, ApplicationException;

	 /**
	    *
	    * <!-- begin-xdoclet-definition -->
	    * @throws RemoteException
	    * @generated //TODO: Must provide implementation for bean create stub     */
	public Date getDateAutorizzazione(String ticket, String codPolo, String codBib, String codAutorizzazione, int idutente, String tipo ) throws RemoteException, ApplicationException;

	 /**
	    *
	    * <!-- begin-xdoclet-definition -->
	    * @throws RemoteException
	    * @generated //TODO: Must provide implementation for bean create stub     */
    public boolean checkEsistenzaUtente(String codfiscale, String mail, String[] ateneo_mat, String idAna) throws  RemoteException;

	 /**
	    *
	    * <!-- begin-xdoclet-definition -->
	    * @throws RemoteException
	    * @generated //TODO: Must provide implementation for bean create stub     */
    public List<DocumentoNonSbnVO>  esisteDocumentoNelRangeDiSegnatura(String ticket,  String codPolo, String codBib, RangeSegnatureVO segnaturaVO, String ordinamento) throws RemoteException, ApplicationException;

	public boolean inviaMailUtentePrenotazione(String ticket, MovimentoListaVO prenotazione) throws ApplicationException, RemoteException;

	public void eseguiControlliRichiestaSIP2(DatiControlloVO dati) throws ApplicationException, RemoteException;
	public void aggiornaIterRichiestaSIP2(DatiControlloVO dati) throws ApplicationException, RemoteException;
	public DatiControlloVO eseguiControlliIterRichiesta(DatiControlloVO dati) throws ApplicationException, RemoteException;
	public MovimentoVO getDettaglioMovimentoDiPrenotazione(MovimentoVO pren, Locale locale) throws RemoteException, Exception;

	public void fixRangeSegnature(String ticket) throws RemoteException;
}

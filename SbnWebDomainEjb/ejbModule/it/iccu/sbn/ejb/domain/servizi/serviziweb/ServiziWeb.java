/*
 * Generated by XDoclet - Do not edit!
 */
package it.iccu.sbn.ejb.domain.servizi.serviziweb;


import it.iccu.sbn.ejb.vo.servizi.documenti.DocumentoNonSbnVO;
import it.iccu.sbn.ejb.vo.servizi.serviziweb.UtenteWeb;
import it.iccu.sbn.ejb.vo.servizi.utenti.dettaglio.UtenteBibliotecaVO;
import it.iccu.sbn.exception.DefaultNotFoundException;
import it.iccu.sbn.exception.UtenteNotFoundException;
import it.iccu.sbn.persistence.dao.exception.DaoManagerException;

import java.net.InetAddress;
import java.rmi.RemoteException;
import java.util.List;


/**
 * Remote interface for ServiziWeb.
 * @generated
 * @wtp generated
 */
public interface ServiziWeb extends javax.ejb.EJBObject
{

	 /**
	    * <!-- begin-xdoclet-definition -->
	 * @param password2
	 * @param inetAddress
	    * @throws DaoManagerException
	    * @throws UtenteNotFoundException
	    * @generated //TODO: Must provide implementation for bean method stub    */
	   public UtenteWeb login(String ticket, String userId, String password, String sip2_ticket, InetAddress inetAddress )
	      throws DaoManagerException, UtenteNotFoundException, RemoteException;

	   public UtenteWeb biblioDest()
	      throws DaoManagerException, UtenteNotFoundException, RemoteException;

	   public DocumentoNonSbnVO ricercaPerSegnatura(String polo, String codBib, String segnatura)
	      throws DaoManagerException, UtenteNotFoundException, RemoteException;

	   public UtenteWeb tipoDoc()
	      throws DaoManagerException, UtenteNotFoundException, RemoteException;

	   public boolean inserisciNuovoDoc(DocumentoNonSbnVO doc)
	      throws DaoManagerException, UtenteNotFoundException, RemoteException;


	   public UtenteWeb modErog()
	      throws DaoManagerException, UtenteNotFoundException, RemoteException;

	   public UtenteWeb supporto()
	      throws DaoManagerException, UtenteNotFoundException, RemoteException;

	   public UtenteWeb listaServ(Integer idUte)
	      throws DaoManagerException, UtenteNotFoundException, RemoteException;

	   public UtenteWeb listaServILL()
	      throws DaoManagerException, UtenteNotFoundException, RemoteException;

	   public List dirittiUtente(Integer idUtente)
	      throws DaoManagerException, UtenteNotFoundException, RemoteException;

	   public List dirittiDocumento(DocumentoNonSbnVO datiDocumento)
	      throws DaoManagerException, UtenteNotFoundException, RemoteException;

	   // almaviva 2009
	   public boolean cambioPwd(String ticket, String userId, String pwdNew) throws RemoteException,UtenteNotFoundException,DefaultNotFoundException;

	   // almaviva 2009
	   public boolean Logout(String userId, String pwdNew) throws RemoteException,UtenteNotFoundException,DefaultNotFoundException;

	   // almaviva 2009
	   public UtenteWeb recuperoPassword(String username) throws RemoteException,UtenteNotFoundException,DefaultNotFoundException;

	   // almaviva 2009
	   public List getListaBibAutoregistrazione(String cdpolo) throws DaoManagerException, UtenteNotFoundException, RemoteException;

	   // almaviva 2009
	   public boolean inserimentoUtenteWeb(UtenteBibliotecaVO utente) throws DaoManagerException, UtenteNotFoundException, RemoteException;

	   // almaviva 2009
	   public UtenteWeb esistenzaUtenteWeb(String codfiscale, String mail)throws DaoManagerException, UtenteNotFoundException, RemoteException;

	   public List getListaServiziAutorizzazione(String ticket, UtenteBibliotecaVO utente) throws RemoteException;

	   // almaviva 2009
	   public List listaBiblioAuto(String cdpolo, Integer codUte, List cdBib)throws DaoManagerException, UtenteNotFoundException, RemoteException;

	   // almaviva 2009
	   public List listaBiblioNonIscr(String cdpolo, Integer codUte, List cdBib)throws DaoManagerException, UtenteNotFoundException, RemoteException;

	   // almaviva 2009
	   public List listaBiblioIscritto(String cdpolo, Integer codUte)throws DaoManagerException, UtenteNotFoundException, RemoteException;

	   // almaviva 2009
	   public boolean updateUtentiBib(Integer idUte)throws RemoteException,UtenteNotFoundException,DefaultNotFoundException;

	   // almaviva 2009
	   public List controlloBibRicOpac(String cdpolo, Integer codUte,	String cdBib)throws DaoManagerException, UtenteNotFoundException, RemoteException;

	   // almaviva 2009
	   public int getLimMax(String polo)throws DaoManagerException, UtenteNotFoundException, RemoteException;

	   // almaviva 2009
	   public boolean setRemote( UtenteWeb utente, String polo, String cdBib, InetAddress inetAddress ) throws DaoManagerException, UtenteNotFoundException, RemoteException;

		// almaviva 2009
		public int contaRangeSegnature(String polo, String codBib)throws DaoManagerException, UtenteNotFoundException, RemoteException;
}
